<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form" xmlns:st="jelly:stapler" xmlns:fa="/font-awesome" xmlns:bs="/bootstrap">
    <link rel="stylesheet" href="${rootURL}/plugin/gamekins/css/prettify.css" type="text/css"/>
    <script src="${rootURL}/plugin/gamekins/vendor/prettify.js" type="text/javascript"/>
    <st:adjunct includes="io.jenkins.plugins.popper"/>
    <st:adjunct includes="io.jenkins.plugins.jquery3"/>
    <st:adjunct includes="io.jenkins.plugins.bootstrap4"/>
    <f:section title="Gamekins">
        <f:entry title="Activate Gamekins" field="activated">
            <f:checkbox />
        </f:entry>
        <f:entry title="Show Leaderboard" field="showLeaderboard">
            <f:checkbox />
        </f:entry>
        <f:entry title="Show Statistics" field="showStatistics">
            <f:checkbox />
        </f:entry>
        <j:if test="${!instance.activated}">
            <j:if test="${!instance.showStatistics}">
                <f:entry>
                    <font style="color: red; float: right">Reset will delete all Challenges and Statistics!</font>
                    <f:validateButton title="Reset" method="reset" />
                </f:entry>
            </j:if>
        </j:if>
        <f:entry title="Add Team" field="teamName">
            <f:textbox id="teamName" style="width: 85%"/>
            <input id="addTeam" type="button" value="Add" style="float: right; width: 13%" data-descriptor-url="${descriptor.descriptorFullUrl}" />
            <div id="error-add-team" style="margin-top: 5px"/>
        </f:entry>
        <f:entry title="Choose Team" field="manageTeam">
            <f:select id="teamsBox" field="teamsBox" />
        </f:entry>
        <f:entry title="Choose User" field="manageUser">
            <f:select id="usersBox" field="usersBox" />
        </f:entry>
        <f:entry field="buttons">
            <div id="error-user-team" style="margin-bottom: 5px"/>
            <input id="addUserToTeam" type="button" value="Add User to Team" data-descriptor-url="${descriptor.descriptorFullUrl}" />
            <input id="removeUserFromTeam" type="button" value="Remove User from Team" data-descriptor-url="${descriptor.descriptorFullUrl}" />
            <input id="deleteTeam" type="button" value="Delete Team" data-descriptor-url="${descriptor.descriptorFullUrl}" />
            <input id="showTeamMemberships" type="button" value="Show Team Memberships" data-descriptor-url="${descriptor.descriptorFullUrl}" />
        </f:entry>

        <div class="table-responsive">
            <table id="team-table" class="table">

            </table>
        </div>

        <f:advanced>
            <f:entry title="Simultaneous current challenges" field="currentChallengesCount"
                     description="Default: 3">
                <f:number />
            </f:entry>
            <f:entry title="Simultaneous current quests" field="currentQuestsCount"
                     description="Default: 1">
                <f:number />
            </f:entry>
            <f:entry title="Simultaneous stored challenges" field="currentStoredChallengesCount"
                     description="Default: 2">
                <f:number />
            </f:entry>
            <f:entry title="Allow sending Challenges" field="canSendChallenge">
                <f:checkbox />
            </f:entry>
            <f:entry title="Commits to be searched" field="searchCommitCount"
                     description="Default: 50">
                <f:number />
            </f:entry>
        </f:advanced>
    </f:section>

    <script>
        jQuery3("#addTeam").on('click', function () {
            let teamName = jQuery3("#teamName")[0].value
            let descriptorFullUrl = jQuery3(this).data('descriptor-url')
            let url = descriptorFullUrl + "/addTeam"
            let parameters = {}
            parameters["teamName"] = teamName

            new Ajax.Request(url, {
                parameters: parameters,
                onComplete: function (rsp) {
                    if (!rsp.responseText.includes("class=error")) {
                        jQuery3("#teamName")[0].value = ""
                    }
                    jQuery3("#error-add-team")[0].innerHTML = rsp.responseText
                }
            })
        })

        jQuery3("#addUserToTeam").on('click', function () {
            let teamsBox = jQuery3("#teamsBox")[0].value
            let usersBox = jQuery3("#usersBox")[0].value
            let descriptorFullUrl = jQuery3(this).data('descriptor-url')
            let url = descriptorFullUrl + "/addUserToTeam"
            let parameters = {}
            parameters["teamsBox"] = teamsBox
            parameters["usersBox"] = usersBox

            new Ajax.Request(url, {
                parameters: parameters,
                onComplete: function (rsp) {
                    jQuery3("#error-user-team")[0].innerHTML = rsp.responseText
                }
            })
        })

        jQuery3("#removeUserFromTeam").on('click', function () {
            let teamsBox = jQuery3("#teamsBox")[0].value
            let usersBox = jQuery3("#usersBox")[0].value
            let descriptorFullUrl = jQuery3(this).data('descriptor-url')
            let url = descriptorFullUrl + "/removeUserFromTeam"
            let parameters = {}
            parameters["teamsBox"] = teamsBox
            parameters["usersBox"] = usersBox

            new Ajax.Request(url, {
                parameters: parameters,
                onComplete: function (rsp) {
                    jQuery3("#error-user-team")[0].innerHTML = rsp.responseText
                }
            })
        })

        jQuery3("#deleteTeam").on('click', function () {
            let teamsBox = jQuery3("#teamsBox")[0].value
            let usersBox = jQuery3("#usersBox")[0].value
            let descriptorFullUrl = jQuery3(this).data('descriptor-url')
            let url = descriptorFullUrl + "/deleteTeam"
            let parameters = {}
            parameters["teamsBox"] = teamsBox

            new Ajax.Request(url, {
                parameters: parameters,
                onComplete: function (rsp) {
                    jQuery3("#error-user-team")[0].innerHTML = rsp.responseText

                    buildTeamsList(descriptorFullUrl)
                }
            })
        })

        jQuery3("#showTeamMemberships").on('click', function () {
            let descriptorFullUrl = jQuery3(this).data('descriptor-url')
            buildTeamsTable(descriptorFullUrl)
        })

        function buildTeamsList(descriptorFullUrl) {
            let url = descriptorFullUrl + "/fillTeamsBoxItems"

            new Ajax.Request(url, {
                onComplete: function (rsp) {
                    let teamsBox = jQuery3("#teamsBox")[0]
                    let values = rsp.responseJSON.values

                    teamsBox.innerHTML = ""
                    for (var i = 0; i &lt; values.length; i++) {
                        var opt = values[i].name;
                        var el = document.createElement("option");
                        el.textContent = opt;
                        el.value = opt;
                        teamsBox.appendChild(el);
                    }

                    buildTeamsTable(descriptorFullUrl, true)
                }
            })
        }

        function buildTeamsTable(descriptorFullUrl, rebuild = false) {
            let url = descriptorFullUrl + "/showTeamMemberships"

            new Ajax.Request(url, {
                onComplete: function (rsp) {
                    url = descriptorFullUrl + "/fillTeamsBoxItems"
                    let teamMap = JSON.parse(rsp.responseText)

                    new Ajax.Request(url, {
                        onComplete: function (rsp) {
                            let teams = rsp.responseJSON.values

                            let table = jQuery3("#team-table")[0]

                            if (table.innerHTML !== "") {
                                table.innerHTML = ""
                                if (!rebuild) return
                            }

                            let header = document.createElement("thead")
                            let headTr = document.createElement("tr")
                            let th1 = document.createElement("th")
                            let th2 = document.createElement("th")

                            th1.setAttribute("scope", "col")
                            th1.innerText = "Team"
                            headTr.appendChild(th1)

                            th2.setAttribute("scope", "col")
                            th2.innerText = "User"
                            headTr.appendChild(th2)

                            header.appendChild(headTr)
                            table.appendChild(header)

                            let body = document.createElement("tbody")

                            for(var i = 0; i &lt; teams.length; i++) {
                                let team = teams[i].name
                                let users = teamMap[team]

                                let tr = document.createElement("tr")
                                let th = document.createElement("th")
                                let td = document.createElement("td")

                                th.innerText = team
                                if (users.length > 0) {
                                    th.setAttribute("rowspan", users.length)
                                    td.innerText = users[0]
                                } else {
                                    th.setAttribute("rowspan", "1")
                                }

                                tr.appendChild(th)
                                tr.appendChild(td)
                                body.appendChild(tr)

                                for(var j = 1; j &lt; users.length; j++) {
                                    let innerTr = document.createElement("tr")
                                    let innerTd = document.createElement("td")

                                    innerTd.innerText = users[j]

                                    innerTr.appendChild(innerTd)
                                    body.appendChild(innerTr)
                                }
                            }

                            table.appendChild(body)
                        }
                    })
                }
            })
        }
    </script>
</j:jelly>
