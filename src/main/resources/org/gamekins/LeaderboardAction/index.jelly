<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:l="/lib/layout" xmlns:st="jelly:stapler" xmlns:f="/lib/form" xmlns:fa="/font-awesome" xmlns:bs="/bootstrap">
    <l:layout title="Leaderboard">
        <l:side-panel>
            <st:include page="sidepanel.jelly" it="${it.job}" optional="true" />
        </l:side-panel>
        <l:main-panel>
        <st:adjunct includes="io.jenkins.plugins.bootstrap4"/>
            <h1 class="mb-2">
                Leaderboard
            </h1>
            <div class="container-fluid row mx-1">
                <div class="col-12 col-md-7 table-responsive">
                    <table class="mt-3 shadow table-hover table pane sortable bigtable">
                      <thead>
                        <tr>

                            <td>${index + 1}</td>
                            <td><a href="${userdetail.url}/achievements">${userdetail.userName}</a></td>
                            <td>${userdetail.teamName}</td>
                            <td>${userdetail.completedChallenges}</td>
                            <td>${userdetail.score}</td>

                        </tr>
                        </thead>
                        <j:forEach indexVar="index" var="userDetail" items="${it.userDetails}">
                            <tr>
                                <td>${index + 1}</td>
                                <td><a href="${userDetail.url}">${userDetail.userName}</a></td>
                                <td>${userDetail.teamName}</td>
                                <td>${userDetail.completedChallenges}</td>
                                <td>${userDetail.score}</td>
                            </tr>
                        </j:forEach>
                    </table>
                </div>
                <div class="col-12 col-md-5 table-responsive ">
                    <table class="mt-3 shadow table-hover table pane sortable bigtable">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Team</th>
                                <th scope="col">Completed Challenges</th>
                                <th initialSortDir="up" scope="col">Score</th>
                            </tr>
                        </thead>
                        <j:forEach indexVar="index" var="teamDetail" items="${it.teamDetails}">
                            <tr>
                                <td>${index + 1}</td>
                                <td>${teamDetail.teamName}</td>
                                <td>${teamDetail.completedChallenges}</td>
                                <td>${teamDetail.score}</td>
                            </tr>
                        </j:forEach>
                    </table>
                </div>
            </div>
            <br/>

            <j:if test="${it.participating}">
                <h1>
                    Challenges
                </h1>
                <div>
                    <table id="currentChallengesTable" class="pane sortable bigtable" style="width:33%; display: inline-table">
                        <tr>
                            <td class="pane-header" align="left,center">#</td>
                            <td class="pane-header" align="left,center">Current Challenges</td>
                            <td class="pane-header" align="left,center"/>
                            <td class="pane-header" align="left,center">Points</td>
                            <j:forEach indexVar="index" var="currentChallenge" items="${it.currentChallenges}">
                                <tr>
                                    <td>${index + 1}</td>
                                    <j:choose>
                                        <j:when test="${currentChallenge.toolTip}">
                                            <td tooltip="${currentChallenge.toolTipText}">
                                                <div id="currentChallengeText${index + 1}">${currentChallenge}</div>
                                                <div id="currentChallengeDiv${index + 1}" style="display: none; margin-top: 2%">
                                                    <input type="text" id="rejectReason${index + 1}" style="margin-right: 2%; margin-bottom: 2%"/>
                                                    <button id="rejectButton${index + 1}" onClick="rejectChallenge(${index + 1}, '${it.descriptor.descriptorFullUrl}')">Reject</button>
                                                    <div id="errorDiv${index + 1}" style="margin-top: 2%"/>
                                                </div>
                                            </td>
                                        </j:when>
                                        <j:otherwise>
                                            <td>
                                                <div id="currentChallengeText${index + 1}">${currentChallenge}</div>
                                                <div id="currentChallengeDiv${index + 1}" style="display: none; margin-top: 2%">
                                                    <input type="text" id="rejectReason${index + 1}" style="margin-right: 2%; margin-bottom: 2%"/>
                                                    <button id="rejectButton${index + 1}" onClick="rejectChallenge(${index + 1}, '${it.descriptor.descriptorFullUrl}')">Reject</button>
                                                    <div id="errorDiv${index + 1}" style="margin-top: 2%"/>
                                                </div>
                                            </td>
                                        </j:otherwise>
                                    </j:choose>
                                    <td>
                                        <button onClick="showReject(${index + 1})">X</button>
                                    </td>
                                    <td>${currentChallenge.score}</td>
                                </tr>
                            </j:forEach>
                        </tr>
                    </table>
                    <table class="pane sortable bigtable" style="width:33%; display: inline-table; margin-left: 0.5%; margin-right: 0.5%">
                        <tr>
                            <td class="pane-header" align="left,center">#</td>
                            <td class="pane-header" align="left,center">Completed Challenges</td>
                            <j:forEach indexVar="index" var="completedChallenge" items="${it.completedChallenges}">
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${completedChallenge}</td>
                                </tr>
                            </j:forEach>
                        </tr>
                    </table>
                    <table class="pane sortable bigtable" style="width:33%; display: inline-table">
                        <tr>
                            <td class="pane-header" align="left,center">#</td>
                            <td class="pane-header" align="left,center">Rejected Challenges</td>
                            <j:forEach indexVar="index" var="rejectedChallenge" items="${it.rejectedChallenges}">
                                <tr>
                                    <td>${index + 1}</td>
                                    <td tooltip="${rejectedChallenge.second}">${rejectedChallenge.first}</td>
                                </tr>
                            </j:forEach>
                        </tr>
                    </table>
                </div>
                <br/>
                <h1>
                    Help
                </h1>
                <ul>
                    <li>The left table displays the current Challenges you can solve</li>
                    <li>All necessary information about the Challenge like <i>class</i>, <i>package</i> or <i>branch</i> can be found in the description of the Challenge</li>
                    <li>There are five types of Challenges:</li>
                    <ol>
                        <li><b>Build Challenge</b>: Generated after a build failed because of your commit. Fix the build to solve the Challenge</li>
                        <li><b>Test Challenge</b>: Just write a new test without specific requirements</li>
                        <li><b>Class Coverage Challenge</b>: Cover more lines in a specific class. It does not matter which lines</li>
                        <li><b>Method Coverage Challenge</b>: Cover more lines in a specific method. It does not matter which lines</li>
                        <li><b>Line Coverage Challenge</b>: Cover the specified line or at least one more branch if available</li>
                    </ol>
                    <li>Hover over a <b>Line Coverage Challenge</b> to get the content of the line</li>
                    <li>The <i>branch</i> information states in which branch the Challenges was generated</li>
                    <li>Challenges can also be solved in other branches if the mentioned code is available</li>
                    <li>Challenges are only generated and solved during the <i>run/build</i> of a project/job in Jenkins</li>
                    <li>Normally, the build is triggered after each commit or after a specific amount of time. If you don't want to wait, you can start the build manually by clicking <b>Build Now</b> in the left panel</li>
                    <li>Solved Challenges are displayed in the middle table</li>
                    <li>If the Challenge cannot be solved for some reason or the class/method under test should not be tested, the Challenges can be rejected</li>
                    <li>To reject a Challenge, click the <b>X</b> button behind the Challenge and add a reason, why to Challenge was rejected</li>
                    <li>Rejected Challenges won't appear to be generated a second time</li>
                    <li>If a <b>Class Coverage Challenge</b> is rejected, the whole <i>class</i> is not considered again for new Challenges</li>
                    <li>After rejection a new Challenge is generated if the code of the project is available</li>
                    <li>Rejected Challenges are displayed in the right table</li>
                    <li>Hover over a rejected Challenge to see the reason for rejection</li>
                    <li>If there are no Challenges generated for you although you have committed something recently, then checkout the <i>Git Names</i> in your profile settings</li>
                    <li>Also have a look at the <b>Achievements</b> available in your profile. You can access them by clicking on the link of your name in the Leaderboard. Remember to choose the right project in the dropdown in your profile.</li>
                </ul>
            </j:if>

            <script>
                function showReject(index) {
                    let div = document.getElementById("currentChallengeDiv" + index)
                    if (div.style.display === "none") {
                        div.style.display = "block"
                    } else {
                        div.style.display = "none"
                    }
                }

                function rejectChallenge(index, descriptorURL) {
                    let challenge = document.getElementById("currentChallengeText" + index).innerText
                    let reason = document.getElementById("rejectReason" + index).value
                    let url = descriptorURL + "/rejectChallenge"
                    let parameters = {}
                    parameters["reject"] = challenge
                    parameters["reason"] = reason

                    new Ajax.Request(url, {
                        parameters: parameters,
                        onComplete: function (rsp) {
                            let errorDiv = document.getElementById("errorDiv" + index)
                            errorDiv.innerHTML = rsp.responseText
                            if (errorDiv.firstElementChild.className !== "error") {
                                location.reload()
                            }
                        }
                    })
                }
            </script>
        </l:main-panel>
    </l:layout>
</j:jelly>
